library(bigrquery)
library(kableExtra)
library(DBI)
library(knitr)
library(dplyr)
library(VIM)
library(tidyverse)
library(summarytools)
library(reshape2)
library(ggplot2)
library(devtools)
library(naniar)
library(knitr)
projecte <- "level-oxygen-353005"
dades <- dbConnect(
bigrquery::bigquery(),
project = projecte,
dataset = "examen_final",
billing = projecte
)
descriptiva <- function(X, nom,dades){
if (!(is.numeric(X) || class(X) == "Date")){
frecs <- table(as.factor(X), useNA = "no"); proportions <- frecs/n
dataf <- data.frame(x = levels(as.factor(X)), y = frecs)
par(mfrow=c(1,2))
print(ggplot(dataf, aes(x = "", y = frecs, fill = x)) +
geom_bar(stat = "identity", width = 1) +
scale_y_continuous(expand = c(0,0)) + coord_polar("y", start = 0) +
theme_minimal())
print(ggplot(dataf, aes(x = x, y=frecs)) + geom_bar(stat = "identity",
color = "lightblue", fill = "lightblue") +
scale_y_continuous(expand = c(0,0)) + theme_void())
x <- data.frame(X)
colnames(x) <- nom
st_options(plain.ascii  = FALSE,  headings = FALSE, footnote = NA,
style = 'grid', dfSummary.varnumbers = FALSE,
dfSummary.valid.col = FALSE, tmp.img.dir  = "img", round.digits = 3,
dfSummary.silent = TRUE, dfSummary.graph.col= FALSE)
dfSummary(x)
}else{
print(ggplot(dades, aes(x = X)) + geom_bar(col = "lightblue", fill =
"lightblue") + theme_minimal())
a <- descr(X, transpose = TRUE, stats = c("N.Valid", "min", "q1", "med",
"mean", "sd", "q3", "max", "iqr"), style = "rmarkdown", justify
= "center")
rownames(a) <- NULL
kable(a, caption = paste("Resum numèric de la variable", nom),
format = "latex", position = "h!")
}
}
descriptiva2 <- function(X, nom,dades){
if (!(is.numeric(X) || class(X) == "Date")){
frecs <- table(as.factor(X), useNA = "no"); proportions <- frecs/n
dataf <- data.frame(x = levels(as.factor(X)), y = frecs)
par(mfrow=c(1,2))
print(ggplot(dataf, aes(x = "", y = frecs, fill = x)) +
geom_bar(stat = "identity", width = 1) +
scale_y_continuous(expand = c(0,0)) + coord_polar("y", start = 0) +
theme_minimal())
print(ggplot(dataf, aes(x = x, y=frecs)) + geom_bar(stat = "identity",
color = "lightblue", fill = "lightblue") +
scale_y_continuous(expand = c(0,0)) + theme_void())
}else{
print(ggplot(dades, aes(x = X)) + geom_bar(col = "lightblue", fill =
"lightblue") + theme_minimal())
a <- descr(X, transpose = TRUE, stats = c("N.Valid", "min", "q1", "med",
"mean", "sd", "q3", "max", "iqr"), style = "rmarkdown", justify
= "center")
rownames(a) <- NULL
kable(a, caption = paste("Resum numèric de la variable", nom),
format = "latex", position = "h!")
}
}
bd <- data.frame(dbGetQuery(dades,
"SELECT * FROM `level-oxygen-353005.examen_final.person` AS B
LEFT JOIN (SELECT T.*, HIT_RUN, TRAV_SP, PREV_SP
FROM (SELECT A.*, COUNT(C.ST_CASE) AS NO_VEHICLES
FROM (SELECT `level-oxygen-353005.examen_final.accident`.*,
COUNT(B1.ST_CASE) AS NO_PER
FROM `level-oxygen-353005.examen_final.accident`
INNER JOIN
`level-oxygen-353005.examen_final.person` AS B1
ON `level-oxygen-353005.examen_final.accident`.ST_CASE = B1.ST_CASE
GROUP BY `level-oxygen-353005.examen_final.accident`.ST_CASE, DAY, HOUR, MINUTE, RUR_URB, DAY_WEEK, FATALS, DRUNK_DR) AS A
INNER JOIN `level-oxygen-353005.examen_final.vehicle` AS C
ON A.ST_CASE = C.ST_CASE
GROUP BY A.ST_CASE, DAY, HOUR, MINUTE, RUR_URB, DAY_WEEK, FATALS, DRUNK_DR, NO_PER) AS T INNER JOIN `level-oxygen-353005.examen_final.vehicle` AS C2
ON T.ST_CASE = C2.ST_CASE) AS T2
ON B.ST_CASE = T2.ST_CASE"))
bd <- bd[,-c(1, 2, 7)]
n <- nrow(bd)
bd <- data.frame(bd)
for(i in c(2, 3, 4, 5, 8, 9, 12, 13, 15)) {
bd[,i]<-as.factor(bd[,i])
}
bd <- bd %>% replace_with_na(replace = list(TRAV_SP = c(997, 998, 999)))
bd <- bd %>% replace_with_na(replace = list(PREV_SP = c(997, 998, 999)))
bd <- bd %>% replace_with_na(replace = list(AGE = c(998, 999)))
bd <- bd %>% replace_with_na(replace = list(MINUTE = c(99)))
bd <- bd %>% replace_with_na(replace = list(HOUR = c(99)))
levels(bd$PER_TYP)
levels(bd$PER_TYP) <- c("1", "2", "altres", "altres", "altres", "altres",
"altres", "altres")
levels(bd$PER_TYP)
knitr::opts_chunk$set(echo = FALSE)
#install.packages("bigrquery")
library(bigrquery)
library(kableExtra)
library(DBI)
library(knitr)
library(dplyr)
library(VIM)
library(tidyverse)
library(summarytools)
library(reshape2)
library(ggplot2)
library(devtools)
library(naniar)
library(knitr)
projecte <- "level-oxygen-353005"
dades <- dbConnect(
bigrquery::bigquery(),
project = projecte,
dataset = "examen_final",
billing = projecte
)
descriptiva <- function(X, nom,dades){
if (!(is.numeric(X) || class(X) == "Date")){
frecs <- table(as.factor(X), useNA = "no"); proportions <- frecs/n
dataf <- data.frame(x = levels(as.factor(X)), y = frecs)
par(mfrow=c(1,2))
print(ggplot(dataf, aes(x = "", y = frecs, fill = x)) +
geom_bar(stat = "identity", width = 1) +
scale_y_continuous(expand = c(0,0)) + coord_polar("y", start = 0) +
theme_minimal())
print(ggplot(dataf, aes(x = x, y=frecs)) + geom_bar(stat = "identity",
color = "lightblue", fill = "lightblue") +
scale_y_continuous(expand = c(0,0)) + theme_void())
x <- data.frame(X)
colnames(x) <- nom
st_options(plain.ascii  = FALSE,  headings = FALSE, footnote = NA,
style = 'grid', dfSummary.varnumbers = FALSE,
dfSummary.valid.col = FALSE, tmp.img.dir  = "img", round.digits = 3,
dfSummary.silent = TRUE, dfSummary.graph.col= FALSE)
dfSummary(x)
}else{
print(ggplot(dades, aes(x = X)) + geom_bar(col = "lightblue", fill =
"lightblue") + theme_minimal())
a <- descr(X, transpose = TRUE, stats = c("N.Valid", "min", "q1", "med",
"mean", "sd", "q3", "max", "iqr"), style = "rmarkdown", justify
= "center")
rownames(a) <- NULL
kable(a, caption = paste("Resum numèric de la variable", nom),
format = "latex", position = "h!")
}
}
descriptiva2 <- function(X, nom,dades){
if (!(is.numeric(X) || class(X) == "Date")){
frecs <- table(as.factor(X), useNA = "no"); proportions <- frecs/n
dataf <- data.frame(x = levels(as.factor(X)), y = frecs)
par(mfrow=c(1,2))
print(ggplot(dataf, aes(x = "", y = frecs, fill = x)) +
geom_bar(stat = "identity", width = 1) +
scale_y_continuous(expand = c(0,0)) + coord_polar("y", start = 0) +
theme_minimal())
print(ggplot(dataf, aes(x = x, y=frecs)) + geom_bar(stat = "identity",
color = "lightblue", fill = "lightblue") +
scale_y_continuous(expand = c(0,0)) + theme_void())
}else{
print(ggplot(dades, aes(x = X)) + geom_bar(col = "lightblue", fill =
"lightblue") + theme_minimal())
a <- descr(X, transpose = TRUE, stats = c("N.Valid", "min", "q1", "med",
"mean", "sd", "q3", "max", "iqr"), style = "rmarkdown", justify
= "center")
rownames(a) <- NULL
kable(a, caption = paste("Resum numèric de la variable", nom),
format = "latex", position = "h!")
}
}
bd <- data.frame(dbGetQuery(dades,
"SELECT * FROM `level-oxygen-353005.examen_final.person` AS B
LEFT JOIN (SELECT T.*, HIT_RUN, TRAV_SP, PREV_SP
FROM (SELECT A.*, COUNT(C.ST_CASE) AS NO_VEHICLES
FROM (SELECT `level-oxygen-353005.examen_final.accident`.*,
COUNT(B1.ST_CASE) AS NO_PER
FROM `level-oxygen-353005.examen_final.accident`
INNER JOIN
`level-oxygen-353005.examen_final.person` AS B1
ON `level-oxygen-353005.examen_final.accident`.ST_CASE = B1.ST_CASE
GROUP BY `level-oxygen-353005.examen_final.accident`.ST_CASE, DAY, HOUR, MINUTE, RUR_URB, DAY_WEEK, FATALS, DRUNK_DR) AS A
INNER JOIN `level-oxygen-353005.examen_final.vehicle` AS C
ON A.ST_CASE = C.ST_CASE
GROUP BY A.ST_CASE, DAY, HOUR, MINUTE, RUR_URB, DAY_WEEK, FATALS, DRUNK_DR, NO_PER) AS T INNER JOIN `level-oxygen-353005.examen_final.vehicle` AS C2
ON T.ST_CASE = C2.ST_CASE) AS T2
ON B.ST_CASE = T2.ST_CASE"))
bd <- bd[,-c(1, 2, 7)]
n <- nrow(bd)
bd <- data.frame(bd)
for(i in c(2, 3, 4, 5, 8, 9, 14, 16)) {
bd[,i]<-as.factor(bd[,i])
}
bd <- bd %>% replace_with_na(replace = list(TRAV_SP = c(997, 998, 999)))
bd <- bd %>% replace_with_na(replace = list(PREV_SP = c(997, 998, 999)))
bd <- bd %>% replace_with_na(replace = list(AGE = c(998, 999)))
bd <- bd %>% replace_with_na(replace = list(MINUTE = c(99)))
bd <- bd %>% replace_with_na(replace = list(HOUR = c(99)))
levels(bd$PER_TYP)
levels(bd$PER_TYP) <- c("1", "2", "altres", "altres", "altres", "altres",
"altres", "altres")
levels(bd$PER_TYP)
levels(bd$HIT_RUN) <- c("No", "Sí", "Desconegut")
bd <- bd %>% replace_with_na(replace = list(TRAV_SP = c(997, 998, 999)))
bd <- bd %>% replace_with_na(replace = list(PREV_SP = c(997, 998, 999)))
bd <- bd %>% replace_with_na(replace = list(AGE = c(998, 999)))
bd <- bd %>% replace_with_na(replace = list(MINUTE = c(99)))
bd <- bd %>% replace_with_na(replace = list(HOUR = c(99)))
sum(is.na(bd$TRAV_SP))
sum(is.na(bd$PREV_SP))
sum(is.na(bd$AGE))
sum(is.na(bd$MINUTE))
sum(is.na(bd$HOUR))
n
bd <- bd %>% replace_with_na(replace = list(TRAV_SP = c(997, 998, 999)))
bd <- bd %>% replace_with_na(replace = list(PREV_SP = c(997, 998, 999)))
bd <- bd %>% replace_with_na(replace = list(AGE = c(998, 999)))
bd <- bd %>% replace_with_na(replace = list(MINUTE = c(99)))
bd <- bd %>% replace_with_na(replace = list(HOUR = c(99)))
sum(is.na(bd$TRAV_SP))/n*100
sum(is.na(bd$PREV_SP))/n*100
sum(is.na(bd$AGE))/n*100
sum(is.na(bd$MINUTE))/n*100
sum(is.na(bd$HOUR))/n*100
par(mfrow=c(1,2))
descriptiva(bd[,16], colnames(bd)[16], dades = bd)
knitr::opts_chunk$set(echo = FALSE)
#install.packages("bigrquery")
library(bigrquery)
library(kableExtra)
library(DBI)
library(knitr)
library(dplyr)
library(VIM)
library(tidyverse)
library(summarytools)
library(reshape2)
library(ggplot2)
library(devtools)
library(naniar)
library(knitr)
projecte <- "level-oxygen-353005"
dades <- dbConnect(
bigrquery::bigquery(),
project = projecte,
dataset = "examen_final",
billing = projecte
)
descriptiva <- function(X, nom,dades){
if (!(is.numeric(X) || class(X) == "Date")){
frecs <- table(as.factor(X), useNA = "no"); proportions <- frecs/n
dataf <- data.frame(x = levels(as.factor(X)), y = frecs)
par(mfrow=c(1,2))
print(ggplot(dataf, aes(x = "", y = frecs, fill = x)) +
geom_bar(stat = "identity", width = 1) +
scale_y_continuous(expand = c(0,0)) + coord_polar("y", start = 0) +
theme_minimal())
print(ggplot(dataf, aes(x = x, y=frecs)) + geom_bar(stat = "identity",
color = "lightblue", fill = "lightblue") +
scale_y_continuous(expand = c(0,0)) + theme_void())
x <- data.frame(X)
colnames(x) <- nom
st_options(plain.ascii  = FALSE,  headings = FALSE, footnote = NA,
style = 'grid', dfSummary.varnumbers = FALSE,
dfSummary.valid.col = FALSE, tmp.img.dir  = "img", round.digits = 3,
dfSummary.silent = TRUE, dfSummary.graph.col= FALSE)
dfSummary(x)
}else{
print(ggplot(dades, aes(x = X)) + geom_bar(col = "lightblue", fill =
"lightblue") + theme_minimal())
a <- descr(X, transpose = TRUE, stats = c("N.Valid", "min", "q1", "med",
"mean", "sd", "q3", "max", "iqr"), style = "rmarkdown", justify
= "center")
rownames(a) <- NULL
kable(a, caption = paste("Resum numèric de la variable", nom),
format = "latex", position = "h!")
}
}
descriptiva2 <- function(X, nom,dades){
if (!(is.numeric(X) || class(X) == "Date")){
frecs <- table(as.factor(X), useNA = "no"); proportions <- frecs/n
dataf <- data.frame(x = levels(as.factor(X)), y = frecs)
par(mfrow=c(1,2))
print(ggplot(dataf, aes(x = "", y = frecs, fill = x)) +
geom_bar(stat = "identity", width = 1) +
scale_y_continuous(expand = c(0,0)) + coord_polar("y", start = 0) +
theme_minimal())
print(ggplot(dataf, aes(x = x, y=frecs)) + geom_bar(stat = "identity",
color = "lightblue", fill = "lightblue") +
scale_y_continuous(expand = c(0,0)) + theme_void())
}else{
print(ggplot(dades, aes(x = X)) + geom_bar(col = "lightblue", fill =
"lightblue") + theme_minimal())
a <- descr(X, transpose = TRUE, stats = c("N.Valid", "min", "q1", "med",
"mean", "sd", "q3", "max", "iqr"), style = "rmarkdown", justify
= "center")
rownames(a) <- NULL
kable(a, caption = paste("Resum numèric de la variable", nom),
format = "latex", position = "h!")
}
}
bd <- data.frame(dbGetQuery(dades,
"SELECT * FROM `level-oxygen-353005.examen_final.person` AS B
LEFT JOIN (SELECT T.*, HIT_RUN, TRAV_SP, PREV_SP
FROM (SELECT A.*, COUNT(C.ST_CASE) AS NO_VEHICLES
FROM (SELECT `level-oxygen-353005.examen_final.accident`.*,
COUNT(B1.ST_CASE) AS NO_PER
FROM `level-oxygen-353005.examen_final.accident`
INNER JOIN
`level-oxygen-353005.examen_final.person` AS B1
ON `level-oxygen-353005.examen_final.accident`.ST_CASE = B1.ST_CASE
GROUP BY `level-oxygen-353005.examen_final.accident`.ST_CASE, DAY, HOUR, MINUTE, RUR_URB, DAY_WEEK, FATALS, DRUNK_DR) AS A
INNER JOIN `level-oxygen-353005.examen_final.vehicle` AS C
ON A.ST_CASE = C.ST_CASE
GROUP BY A.ST_CASE, DAY, HOUR, MINUTE, RUR_URB, DAY_WEEK, FATALS, DRUNK_DR, NO_PER) AS T INNER JOIN `level-oxygen-353005.examen_final.vehicle` AS C2
ON T.ST_CASE = C2.ST_CASE) AS T2
ON B.ST_CASE = T2.ST_CASE"))
bd <- bd[,-c(1, 2, 7)]
n <- nrow(bd)
bd <- data.frame(bd)
for(i in c(2, 3, 4, 5, 8, 9, 14, 16)) {
bd[,i]<-as.factor(bd[,i])
}
bd <- bd %>% replace_with_na(replace = list(TRAV_SP = c(997, 998, 999)))
#bd <- bd %>% replace_with_na(replace = list(PREV_SP = c(997, 998, 999)))
bd <- bd %>% replace_with_na(replace = list(AGE = c(998, 999)))
bd <- bd %>% replace_with_na(replace = list(MINUTE = c(99)))
bd <- bd %>% replace_with_na(replace = list(HOUR = c(99)))
sum(is.na(bd$TRAV_SP))/n*100
#sum(is.na(bd$PREV_SP))/n*100
sum(is.na(bd$AGE))/n*100
sum(is.na(bd$MINUTE))/n*100
sum(is.na(bd$HOUR))/n*100
levels(bd$PREV_SP)
levels(bd$PREV_SP) <- c("1", "2", "3", "4", "7", "9", "Desconegut", "Desconegut")
levels(bd$PREV_SP)
levels(bd$PREV_SP) <- c("1", "2", "3", "4", "5", "7", "9", "Desconegut", "Desconegut")
levels(bd$PREV_SP) <- c("0", "1", "2", "3", "4", "5", "7", "9", "Desconegut", "Desconegut")
knitr::opts_chunk$set(echo = FALSE)
#install.packages("bigrquery")
library(bigrquery)
library(kableExtra)
library(DBI)
library(knitr)
library(dplyr)
library(VIM)
library(tidyverse)
library(summarytools)
library(reshape2)
library(ggplot2)
library(devtools)
library(naniar)
library(knitr)
projecte <- "level-oxygen-353005"
dades <- dbConnect(
bigrquery::bigquery(),
project = projecte,
dataset = "examen_final",
billing = projecte
)
descriptiva <- function(X, nom,dades){
if (!(is.numeric(X) || class(X) == "Date")){
frecs <- table(as.factor(X), useNA = "no"); proportions <- frecs/n
dataf <- data.frame(x = levels(as.factor(X)), y = frecs)
par(mfrow=c(1,2))
print(ggplot(dataf, aes(x = "", y = frecs, fill = x)) +
geom_bar(stat = "identity", width = 1) +
scale_y_continuous(expand = c(0,0)) + coord_polar("y", start = 0) +
theme_minimal())
print(ggplot(dataf, aes(x = x, y=frecs)) + geom_bar(stat = "identity",
color = "lightblue", fill = "lightblue") +
scale_y_continuous(expand = c(0,0)) + theme_void())
x <- data.frame(X)
colnames(x) <- nom
st_options(plain.ascii  = FALSE,  headings = FALSE, footnote = NA,
style = 'grid', dfSummary.varnumbers = FALSE,
dfSummary.valid.col = FALSE, tmp.img.dir  = "img", round.digits = 3,
dfSummary.silent = TRUE, dfSummary.graph.col= FALSE)
dfSummary(x)
}else{
print(ggplot(dades, aes(x = X)) + geom_bar(col = "lightblue", fill =
"lightblue") + theme_minimal())
a <- descr(X, transpose = TRUE, stats = c("N.Valid", "min", "q1", "med",
"mean", "sd", "q3", "max", "iqr"), style = "rmarkdown", justify
= "center")
rownames(a) <- NULL
kable(a, caption = paste("Resum numèric de la variable", nom),
format = "latex", position = "h!")
}
}
descriptiva2 <- function(X, nom,dades){
if (!(is.numeric(X) || class(X) == "Date")){
frecs <- table(as.factor(X), useNA = "no"); proportions <- frecs/n
dataf <- data.frame(x = levels(as.factor(X)), y = frecs)
par(mfrow=c(1,2))
print(ggplot(dataf, aes(x = "", y = frecs, fill = x)) +
geom_bar(stat = "identity", width = 1) +
scale_y_continuous(expand = c(0,0)) + coord_polar("y", start = 0) +
theme_minimal())
print(ggplot(dataf, aes(x = x, y=frecs)) + geom_bar(stat = "identity",
color = "lightblue", fill = "lightblue") +
scale_y_continuous(expand = c(0,0)) + theme_void())
}else{
print(ggplot(dades, aes(x = X)) + geom_bar(col = "lightblue", fill =
"lightblue") + theme_minimal())
a <- descr(X, transpose = TRUE, stats = c("N.Valid", "min", "q1", "med",
"mean", "sd", "q3", "max", "iqr"), style = "rmarkdown", justify
= "center")
rownames(a) <- NULL
kable(a, caption = paste("Resum numèric de la variable", nom),
format = "latex", position = "h!")
}
}
bd <- data.frame(dbGetQuery(dades,
"SELECT * FROM `level-oxygen-353005.examen_final.person` AS B
LEFT JOIN (SELECT T.*, HIT_RUN, TRAV_SP, PREV_SP
FROM (SELECT A.*, COUNT(C.ST_CASE) AS NO_VEHICLES
FROM (SELECT `level-oxygen-353005.examen_final.accident`.*,
COUNT(B1.ST_CASE) AS NO_PER
FROM `level-oxygen-353005.examen_final.accident`
INNER JOIN
`level-oxygen-353005.examen_final.person` AS B1
ON `level-oxygen-353005.examen_final.accident`.ST_CASE = B1.ST_CASE
GROUP BY `level-oxygen-353005.examen_final.accident`.ST_CASE, DAY, HOUR, MINUTE, RUR_URB, DAY_WEEK, FATALS, DRUNK_DR) AS A
INNER JOIN `level-oxygen-353005.examen_final.vehicle` AS C
ON A.ST_CASE = C.ST_CASE
GROUP BY A.ST_CASE, DAY, HOUR, MINUTE, RUR_URB, DAY_WEEK, FATALS, DRUNK_DR, NO_PER) AS T INNER JOIN `level-oxygen-353005.examen_final.vehicle` AS C2
ON T.ST_CASE = C2.ST_CASE) AS T2
ON B.ST_CASE = T2.ST_CASE"))
bd <- bd[,-c(1, 2, 7)]
n <- nrow(bd)
bd <- data.frame(bd)
for(i in c(2, 3, 4, 5, 8, 9, 14, 16)) {
bd[,i]<-as.factor(bd[,i])
}
bd <- bd %>% replace_with_na(replace = list(TRAV_SP = c(997, 998, 999)))
bd <- bd %>% replace_with_na(replace = list(AGE = c(998, 999)))
bd <- bd %>% replace_with_na(replace = list(MINUTE = c(99)))
bd <- bd %>% replace_with_na(replace = list(HOUR = c(99)))
sum(is.na(bd$TRAV_SP))/n*100
sum(is.na(bd$AGE))/n*100
sum(is.na(bd$MINUTE))/n*100
sum(is.na(bd$HOUR))/n*100
library(class)
fullVariables<-c(10, 11, 12, 13)
aux <- bd[,fullVariables]
var_num_incompletes <- c(1, 6, 7, 15)
for (k in var_num_incompletes){
aux1 <- aux[!is.na(bd[,k]),]
dim(aux1)
aux2 <- aux[is.na(bd[,k]),]
dim(aux2)
RefValues<- bd[!is.na(bd[,k]),k]
knn.values = knn(aux1,aux2,RefValues)
bd[is.na(bd[,k]),k] = as.numeric(as.character(knn.values))
fullVariables<-c(fullVariables, k)
aux<-bd[,fullVariables]
}
dim(aux1)
dim(aux2)
descriptiva(bd[,1], "Edat", dades = bd)
levels(bd$SEX)
levels(bd$DOA)
sum(is.na(bd$TRAV_SP))/n*100
sum(is.na(bd$AGE))/n*100
sum(is.na(bd$MINUTE))/n*100
sum(is.na(bd$HOUR))/n*100
mean(bd$MINUTE)
?mean
mean(bd$MINUTE, na.rm = TRUE)
names(bd)
?st_options
st_options(plain.ascii  = FALSE,  headings = FALSE, footnote = NA,
style = 'grid', dfSummary.varnumbers = FALSE,
dfSummary.valid.col = TRUE, tmp.img.dir  = "img", round.digits = 3,
dfSummary.silent = TRUE, dfSummary.graph.col= FALSE)
dfSummary(bd[,4])
levels(bd$DOA) <- c("Sobreviu", "Mort a l'accident", "Mort al trasllat",
"Desconegut")
st_options(plain.ascii  = FALSE,  headings = FALSE, footnote = NA,
style = 'grid', dfSummary.varnumbers = FALSE,
dfSummary.valid.col = TRUE, tmp.img.dir  = "img", round.digits = 3,
dfSummary.silent = TRUE, dfSummary.graph.col= FALSE)
dfSummary(bd[,4])
?dfSummary
kable(names(bd), format="simple")
propmiss <- function(dataframe) lapply(dataframe,function(x) data.frame(na = sum(is.na(x)),
n = length(x),  propNA = round(sum(is.na(x))/length(x),4) * 100))
missings <- propmiss(bd)
missings <- do.call(rbind.data.frame, missings)
kable(missings[,c(1, 6, 7, 10, 11, 12, 13, 15)],caption = "Percentatge de missings per variable", col.names = c("NA","Percentatge de NA"), format="simple")
propmiss <- function(dataframe) lapply(dataframe,function(x) data.frame(na = sum(is.na(x)),
n = length(x),  propNA = round(sum(is.na(x))/length(x),4) * 100))
missings <- propmiss(bd[,c(1, 6, 7, 10, 11, 12, 13, 15)])
missings <- do.call(rbind.data.frame, missings)
kable(missings,caption = "Percentatge de missings per variable", col.names = c("NA","Percentatge de NA"), format="simple")
propmiss <- function(dataframe) lapply(dataframe,function(x) data.frame(na = sum(is.na(x)),
n = length(x),  propNA = round(sum(is.na(x))/length(x),4) * 100))
missings <- propmiss(bd[,c(1, 6, 7, 10, 11, 12, 13, 15)])
missings <- do.call(rbind.data.frame, missings)
kable(missings[,-2], caption = "Percentatge de missings per variable", col.names = c("NA","Percentatge de NA"), format="simple")
?kable
setwd("~/Documents/GitHub/TFG")
knit_with_parameters("~/Documents/GitHub/TFG/Anàlisi descriptiva.Rmd")
